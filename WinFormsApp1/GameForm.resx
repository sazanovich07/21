<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        wFdRcIsAAAAASUVORK5CYII=
</value>
  </data>
</root>